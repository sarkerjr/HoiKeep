generator client {
  provider                  = "prisma-client-js"
  previewFeatures           = ["fieldReference", "clientExtensions"]
  binaryTargets             = ["native"]
  uncheckedRelationalInputs = "true"
  uncheckedScalarInputs     = "true"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Halls {
  id          String        @id @default(uuid())
  name        String
  nameTag     String
  type        Gender
  authorities Authorities[]
  staffs      Staffs[]
  operators   Operators[]
  Students    Students[]
}

model Departments {
  id          String        @id @default(uuid())
  name        String
  nameTag     String
  authorities Authorities[]
  staffs      Staffs[]
  Students    Students[]
}

model Authorities {
  id               String            @id @default(uuid())
  active           Boolean           @default(false)
  role             String
  authorityDetails AuthorityDetails?
  halls            Halls?            @relation(fields: [hallsId], references: [id])
  hallsId          String?
  departments      Departments?      @relation(fields: [departmentsId], references: [id])
  departmentsId    String?
}

model AuthorityDetails {
  id            String      @id @default(uuid())
  name          String
  email         String      @unique
  designation   String
  authorities   Authorities @relation(fields: [authoritiesId], references: [id])
  authoritiesId String      @unique
}

model Staffs {
  id            String        @id @default(uuid())
  role          String
  active        Boolean       @default(false)
  staffDetails  StaffDetails?
  halls         Halls?        @relation(fields: [hallsId], references: [id])
  hallsId       String?
  departments   Departments?  @relation(fields: [departmentsId], references: [id])
  departmentsId String?
}

model StaffDetails {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  staffs   Staffs @relation(fields: [staffsId], references: [id])
  staffsId String @unique
}

model Operators {
  id              String           @id @default(uuid())
  name            String
  email           String           @unique
  role            String
  operatorDetails OperatorDetails?
  halls           Halls?           @relation(fields: [hallsId], references: [id])
  hallsId         String?
}

model OperatorDetails {
  id          String    @id @default(uuid())
  name        String
  email       String    @unique
  opearators  Operators @relation(fields: [operatorsId], references: [id])
  operatorsId String    @unique
}

model Students {
  id            String       @id @default(uuid())
  active        Boolean      @default(false)
  halls         Halls?       @relation(fields: [hallsId], references: [id])
  hallsId       String?
  departments   Departments? @relation(fields: [departmentsId], references: [id])
  departmentsId String?
}

model StudentProfiles {
  id        String @id @default(uuid())
  name      String
  studentId String
  session   String
  email     String
}

enum Gender {
  MALE
  FEMALE
}
